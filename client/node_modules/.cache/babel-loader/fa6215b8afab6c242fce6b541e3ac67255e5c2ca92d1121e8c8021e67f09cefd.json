{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,Nav,Tab,Alert,Table,Button,Modal,Form,Badge}from'react-bootstrap';import{Link}from'react-router-dom';import{getAllLoans,getPendingLoans,approveLoan,rejectLoan}from'../services/loanService';import{getAllUsers,makeAdmin}from'../services/userService';import{getAllEmis,updateOverdueEmis}from'../services/emiService';import DashboardCharts from'../components/dashboard/DashboardCharts';import EmiList from'../components/emi/EmiList';import UserVerificationPanel from'../components/admin/UserVerificationPanel';import AdminStats from'../components/admin/AdminStats';// Helper function to format currency\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount);};// Helper function to format date\nconst formatDate=dateString=>{if(!dateString)return'N/A';const options={year:'numeric',month:'long',day:'numeric'};return new Date(dateString).toLocaleDateString(undefined,options);};// Loan status badge component\nconst LoanStatusBadge=_ref=>{let{status}=_ref;let variant;switch(status){case'approved':variant='success';break;case'rejected':variant='danger';break;case'pending':variant='warning';break;case'paid':variant='primary';break;default:variant='secondary';}return/*#__PURE__*/_jsx(Badge,{bg:variant,children:status.toUpperCase()});};const AdminDashboard=()=>{const[activeTab,setActiveTab]=useState('dashboard');const[loans,setLoans]=useState([]);const[pendingLoans,setPendingLoans]=useState([]);const[users,setUsers]=useState([]);const[emis,setEmis]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[rejectReason,setRejectReason]=useState('');const[rejectLoanId,setRejectLoanId]=useState(null);const[showRejectForm,setShowRejectForm]=useState(false);const[refreshData,setRefreshData]=useState(false);const[updateSuccess,setUpdateSuccess]=useState('');useEffect(()=>{const fetchData=async()=>{setLoading(true);setError('');try{if(activeTab==='dashboard'||activeTab==='pending'||activeTab==='all'){const pendingData=await getPendingLoans();setPendingLoans(pendingData);}if(activeTab==='dashboard'||activeTab==='all'){const loansData=await getAllLoans();setLoans(loansData);}if(activeTab==='dashboard'||activeTab==='users'){const usersData=await getAllUsers();setUsers(usersData);}if(activeTab==='dashboard'||activeTab==='emis'){const emisData=await getAllEmis();setEmis(emisData);}// No need to fetch verification data here - component handles its own data\n}catch(err){console.error('Error fetching data:',err);setError(`Failed to fetch data: ${err.message||'Unknown error'}`);}finally{setLoading(false);}};fetchData();},[activeTab,refreshData]);const handleTabChange=tab=>{setActiveTab(tab);};const handleApproveLoan=async loanId=>{try{await approveLoan(loanId);setUpdateSuccess(\"Loan approved successfully!\");setRefreshData(!refreshData);}catch(err){console.error('Loan approval error:',err);if(err.verificationStatus&&err.userId){setError(`Cannot approve loan. User needs to be verified first. Current status: ${err.verificationStatus}. Please go to User Verification panel to verify this user.`);}else{setError(`Failed to approve loan: ${err.message||'Please try again'}`);}}};const prepareRejectLoan=loanId=>{setRejectLoanId(loanId);setRejectReason('');setShowRejectForm(true);};const handleRejectLoan=async e=>{e.preventDefault();if(!rejectLoanId||!rejectReason.trim()){setError('Rejection reason is required.');return;}try{await rejectLoan(rejectLoanId,rejectReason);setShowRejectForm(false);setRejectLoanId(null);setRejectReason('');setRefreshData(!refreshData);}catch(err){setError('Failed to reject loan. Please try again.');console.error(err);}};const handleMakeAdmin=async userId=>{try{await makeAdmin(userId);setRefreshData(!refreshData);}catch(err){setError('Failed to promote user to admin. Please try again.');console.error(err);}};const handleUpdateOverdueEmis=async()=>{try{const result=await updateOverdueEmis();setUpdateSuccess(`${result.overdueEmis.length} EMIs marked as overdue.`);setTimeout(()=>{setUpdateSuccess('');},3000);setRefreshData(!refreshData);}catch(err){setError('Failed to update overdue EMIs. Please try again.');console.error(err);}};// Add a refresh function\nconst refreshTabData=()=>{console.log('Manually refreshing data...');setRefreshData(!refreshData);};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(\"h1\",{className:\"mb-4\",children:\"Admin Dashboard\"})})}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),updateSuccess&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:updateSuccess}),/*#__PURE__*/_jsx(AdminStats,{}),/*#__PURE__*/_jsx(Row,{className:\"mt-4\",children:/*#__PURE__*/_jsxs(Tab.Container,{activeKey:activeTab,onSelect:handleTabChange,children:[/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Admin Controls\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsxs(Nav,{variant:\"pills\",className:\"flex-column\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"dashboard\",className:\"rounded-0\",children:\"Dashboard\"})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"verifications\",className:\"rounded-0\",children:\"User Verifications\"})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"pending\",className:\"rounded-0\",children:\"Pending Loans\"})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"all\",className:\"rounded-0\",children:\"All Loans\"})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"emis\",className:\"rounded-0\",children:\"Manage EMIs\"})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:\"users\",className:\"rounded-0\",children:\"User Management\"})})]})})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"w-100 mb-3\",onClick:refreshTabData,children:\"Refresh Data\"})]}),/*#__PURE__*/_jsx(Col,{md:9,children:/*#__PURE__*/_jsxs(Tab.Content,{children:[/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"dashboard\",children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading dashboard data...\"}):/*#__PURE__*/_jsx(DashboardCharts,{loansData:loans,usersCount:users.length})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"verifications\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"User Verification Management\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",onClick:refreshTabData,children:\"Refresh Data\"})]}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(UserVerificationPanel,{},`verification-panel-${refreshData}`)})]})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"pending\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h4\",{children:\"Pending Loan Applications\"})}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading...\"}):pendingLoans.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"No pending loan applications.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Alert,{variant:\"info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Users must be verified before their loans can be approved. Please check the User Verification panel above to verify users.\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Term\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Applied Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Verification Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:pendingLoans.map(loan=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:loan.user.name}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(loan.amount)}),/*#__PURE__*/_jsxs(\"td\",{children:[loan.term,\" months\"]}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(loan.applicationDate||loan.createdAt)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:loan.user.verificationStatus==='verified'?'success':loan.user.verificationStatus==='pending'?'warning':'danger',children:loan.user.verificationStatus||'not submitted'})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",size:\"sm\",className:\"me-2\",onClick:()=>handleApproveLoan(loan._id),disabled:loan.user.verificationStatus!=='verified',children:\"Approve\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",size:\"sm\",onClick:()=>prepareRejectLoan(loan._id),children:\"Reject\"})]})]},loan._id))})]})})]})})]})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"all\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h4\",{children:\"All Loans\"})}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading...\"}):loans.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"No loans found.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Term\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Applied Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:loans.map(loan=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:loan.user.name}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(loan.amount)}),/*#__PURE__*/_jsxs(\"td\",{children:[loan.term,\" months\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(LoanStatusBadge,{status:loan.status})}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(loan.applicationDate||loan.createdAt)})]},loan._id))})]})})})]})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"emis\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Manage EMIs\"}),/*#__PURE__*/_jsx(Button,{variant:\"warning\",onClick:handleUpdateOverdueEmis,children:\"Update Overdue EMIs\"})]}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading EMI data...\"}):/*#__PURE__*/_jsx(EmiList,{emis:emis,refreshEmis:()=>setRefreshData(!refreshData),isAdmin:true})})]})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"users\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h4\",{children:\"User Management\"})}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading...\"}):users.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"No users found.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Role\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Verification Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.role}),/*#__PURE__*/_jsx(\"td\",{children:user.verificationStatus}),/*#__PURE__*/_jsx(\"td\",{children:user.role!=='admin'&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"sm\",onClick:()=>handleMakeAdmin(user._id),children:\"Make Admin\"})})]},user._id))})]})})})]})})]})})]})}),/*#__PURE__*/_jsxs(Modal,{show:showRejectForm,onHide:()=>setShowRejectForm(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Reject Loan Application\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleRejectLoan,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Rejection Reason\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:3,value:rejectReason,onChange:e=>setRejectReason(e.target.value),required:true})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"danger\",className:\"mt-3\",children:\"Confirm Rejection\"})]})})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Nav","Tab","Alert","Table","Button","Modal","Form","Badge","Link","getAllLoans","getPendingLoans","approveLoan","rejectLoan","getAllUsers","makeAdmin","getAllEmis","updateOverdueEmis","DashboardCharts","EmiList","UserVerificationPanel","AdminStats","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","LoanStatusBadge","_ref","status","variant","bg","children","toUpperCase","AdminDashboard","activeTab","setActiveTab","loans","setLoans","pendingLoans","setPendingLoans","users","setUsers","emis","setEmis","loading","setLoading","error","setError","rejectReason","setRejectReason","rejectLoanId","setRejectLoanId","showRejectForm","setShowRejectForm","refreshData","setRefreshData","updateSuccess","setUpdateSuccess","fetchData","pendingData","loansData","usersData","emisData","err","console","message","handleTabChange","tab","handleApproveLoan","loanId","verificationStatus","userId","prepareRejectLoan","handleRejectLoan","e","preventDefault","trim","handleMakeAdmin","handleUpdateOverdueEmis","result","overdueEmis","length","setTimeout","refreshTabData","log","fluid","className","md","activeKey","onSelect","Header","Body","Item","eventKey","onClick","Content","Pane","usersCount","map","loan","user","name","term","applicationDate","createdAt","size","_id","disabled","refreshEmis","isAdmin","email","role","show","onHide","closeButton","Title","onSubmit","Group","Label","Control","as","rows","value","onChange","target","required","type"],"sources":["C:/Users/cpl/Desktop/Cursor/loan-management-system/client/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Nav, Tab, Alert, Table, Button, Modal, Form, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { getAllLoans, getPendingLoans, approveLoan, rejectLoan } from '../services/loanService';\nimport { getAllUsers, makeAdmin } from '../services/userService';\nimport { getAllEmis, updateOverdueEmis } from '../services/emiService';\nimport DashboardCharts from '../components/dashboard/DashboardCharts';\nimport EmiList from '../components/emi/EmiList';\nimport UserVerificationPanel from '../components/admin/UserVerificationPanel';\nimport AdminStats from '../components/admin/AdminStats';\n\n// Helper function to format currency\nconst formatCurrency = (amount) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(amount);\n};\n\n// Helper function to format date\nconst formatDate = (dateString) => {\n  if (!dateString) return 'N/A';\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Loan status badge component\nconst LoanStatusBadge = ({ status }) => {\n  let variant;\n  switch (status) {\n    case 'approved':\n      variant = 'success';\n      break;\n    case 'rejected':\n      variant = 'danger';\n      break;\n    case 'pending':\n      variant = 'warning';\n      break;\n    case 'paid':\n      variant = 'primary';\n      break;\n    default:\n      variant = 'secondary';\n  }\n  \n  return <Badge bg={variant}>{status.toUpperCase()}</Badge>;\n};\n\nconst AdminDashboard = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [loans, setLoans] = useState([]);\n  const [pendingLoans, setPendingLoans] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [emis, setEmis] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [rejectReason, setRejectReason] = useState('');\n  const [rejectLoanId, setRejectLoanId] = useState(null);\n  const [showRejectForm, setShowRejectForm] = useState(false);\n  const [refreshData, setRefreshData] = useState(false);\n  const [updateSuccess, setUpdateSuccess] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError('');\n      \n      try {\n        if (activeTab === 'dashboard' || activeTab === 'pending' || activeTab === 'all') {\n          const pendingData = await getPendingLoans();\n          setPendingLoans(pendingData);\n        }\n        \n        if (activeTab === 'dashboard' || activeTab === 'all') {\n          const loansData = await getAllLoans();\n          setLoans(loansData);\n        }\n        \n        if (activeTab === 'dashboard' || activeTab === 'users') {\n          const usersData = await getAllUsers();\n          setUsers(usersData);\n        }\n\n        if (activeTab === 'dashboard' || activeTab === 'emis') {\n          const emisData = await getAllEmis();\n          setEmis(emisData);\n        }\n        \n        // No need to fetch verification data here - component handles its own data\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(`Failed to fetch data: ${err.message || 'Unknown error'}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [activeTab, refreshData]);\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const handleApproveLoan = async (loanId) => {\n    try {\n      await approveLoan(loanId);\n      setUpdateSuccess(\"Loan approved successfully!\");\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error('Loan approval error:', err);\n      if (err.verificationStatus && err.userId) {\n        setError(`Cannot approve loan. User needs to be verified first. Current status: ${err.verificationStatus}. Please go to User Verification panel to verify this user.`);\n      } else {\n        setError(`Failed to approve loan: ${err.message || 'Please try again'}`);\n      }\n    }\n  };\n\n  const prepareRejectLoan = (loanId) => {\n    setRejectLoanId(loanId);\n    setRejectReason('');\n    setShowRejectForm(true);\n  };\n\n  const handleRejectLoan = async (e) => {\n    e.preventDefault();\n    \n    if (!rejectLoanId || !rejectReason.trim()) {\n      setError('Rejection reason is required.');\n      return;\n    }\n    \n    try {\n      await rejectLoan(rejectLoanId, rejectReason);\n      setShowRejectForm(false);\n      setRejectLoanId(null);\n      setRejectReason('');\n      setRefreshData(!refreshData);\n    } catch (err) {\n      setError('Failed to reject loan. Please try again.');\n      console.error(err);\n    }\n  };\n\n  const handleMakeAdmin = async (userId) => {\n    try {\n      await makeAdmin(userId);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      setError('Failed to promote user to admin. Please try again.');\n      console.error(err);\n    }\n  };\n\n  const handleUpdateOverdueEmis = async () => {\n    try {\n      const result = await updateOverdueEmis();\n      setUpdateSuccess(`${result.overdueEmis.length} EMIs marked as overdue.`);\n      setTimeout(() => {\n        setUpdateSuccess('');\n      }, 3000);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      setError('Failed to update overdue EMIs. Please try again.');\n      console.error(err);\n    }\n  };\n\n  // Add a refresh function\n  const refreshTabData = () => {\n    console.log('Manually refreshing data...');\n    setRefreshData(!refreshData);\n  };\n\n  return (\n    <Container fluid className=\"py-4\">\n      <Row>\n        <Col md={12}>\n          <h1 className=\"mb-4\">Admin Dashboard</h1>\n        </Col>\n      </Row>\n\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {updateSuccess && <Alert variant=\"success\">{updateSuccess}</Alert>}\n\n      {/* Admin Stats */}\n      <AdminStats />\n\n      {/* Main Content */}\n      <Row className=\"mt-4\">\n        <Tab.Container activeKey={activeTab} onSelect={handleTabChange}>\n          <Col md={3}>\n            <Card className=\"mb-4\">\n              <Card.Header>\n                <h5>Admin Controls</h5>\n              </Card.Header>\n              <Card.Body className=\"p-0\">\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"dashboard\" className=\"rounded-0\">\n                      Dashboard\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"verifications\" className=\"rounded-0\">\n                      User Verifications\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"pending\" className=\"rounded-0\">\n                      Pending Loans\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"all\" className=\"rounded-0\">\n                      All Loans\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"emis\" className=\"rounded-0\">\n                      Manage EMIs\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"users\" className=\"rounded-0\">\n                      User Management\n                    </Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </Card.Body>\n            </Card>\n            \n            {/* Add refresh button */}\n            <Button \n              variant=\"primary\" \n              className=\"w-100 mb-3\"\n              onClick={refreshTabData}\n            >\n              Refresh Data\n            </Button>\n          </Col>\n          <Col md={9}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"dashboard\">\n                {loading ? (\n                  <p className=\"text-center\">Loading dashboard data...</p>\n                ) : (\n                  <DashboardCharts \n                    loansData={loans} \n                    usersCount={users.length} \n                  />\n                )}\n              </Tab.Pane>\n              \n              {/* New User Verification Tab */}\n              <Tab.Pane eventKey=\"verifications\">\n                <Card>\n                  <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                    <h4>User Verification Management</h4>\n                    <Button \n                      variant=\"outline-primary\" \n                      onClick={refreshTabData}\n                    >\n                      Refresh Data\n                    </Button>\n                  </Card.Header>\n                  <Card.Body>\n                    <UserVerificationPanel key={`verification-panel-${refreshData}`} />\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n              \n              <Tab.Pane eventKey=\"pending\">\n                <Card>\n                  <Card.Header>\n                    <h4>Pending Loan Applications</h4>\n                  </Card.Header>\n                  <Card.Body>\n                    {loading ? (\n                      <p className=\"text-center\">Loading...</p>\n                    ) : pendingLoans.length === 0 ? (\n                      <p className=\"text-center\">No pending loan applications.</p>\n                    ) : (\n                      <>\n                        <Alert variant=\"info\">\n                          <strong>Note:</strong> Users must be verified before their loans can be approved. \n                          Please check the User Verification panel above to verify users.\n                        </Alert>\n                        <div className=\"table-responsive\">\n                          <Table>\n                            <thead>\n                              <tr>\n                                <th>User</th>\n                                <th>Amount</th>\n                                <th>Term</th>\n                                <th>Applied Date</th>\n                                <th>Verification Status</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {pendingLoans.map(loan => (\n                                <tr key={loan._id}>\n                                  <td>{loan.user.name}</td>\n                                  <td>{formatCurrency(loan.amount)}</td>\n                                  <td>{loan.term} months</td>\n                                  <td>{formatDate(loan.applicationDate || loan.createdAt)}</td>\n                                  <td>\n                                    <Badge \n                                      bg={loan.user.verificationStatus === 'verified' ? 'success' : \n                                         loan.user.verificationStatus === 'pending' ? 'warning' : 'danger'}\n                                    >\n                                      {loan.user.verificationStatus || 'not submitted'}\n                                    </Badge>\n                                  </td>\n                                  <td>\n                                    <Button\n                                      variant=\"success\"\n                                      size=\"sm\"\n                                      className=\"me-2\"\n                                      onClick={() => handleApproveLoan(loan._id)}\n                                      disabled={loan.user.verificationStatus !== 'verified'}\n                                    >\n                                      Approve\n                                    </Button>\n                                    <Button\n                                      variant=\"danger\"\n                                      size=\"sm\"\n                                      onClick={() => prepareRejectLoan(loan._id)}\n                                    >\n                                      Reject\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        </div>\n                      </>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"all\">\n                <Card>\n                  <Card.Header>\n                    <h4>All Loans</h4>\n                  </Card.Header>\n                  <Card.Body>\n                    {loading ? (\n                      <p className=\"text-center\">Loading...</p>\n                    ) : loans.length === 0 ? (\n                      <p className=\"text-center\">No loans found.</p>\n                    ) : (\n                      <div className=\"table-responsive\">\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>User</th>\n                              <th>Amount</th>\n                              <th>Term</th>\n                              <th>Status</th>\n                              <th>Applied Date</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {loans.map(loan => (\n                              <tr key={loan._id}>\n                                <td>{loan.user.name}</td>\n                                <td>{formatCurrency(loan.amount)}</td>\n                                <td>{loan.term} months</td>\n                                <td><LoanStatusBadge status={loan.status} /></td>\n                                <td>{formatDate(loan.applicationDate || loan.createdAt)}</td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </div>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"emis\">\n                <Card>\n                  <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                    <h4>Manage EMIs</h4>\n                    <Button\n                      variant=\"warning\"\n                      onClick={handleUpdateOverdueEmis}\n                    >\n                      Update Overdue EMIs\n                    </Button>\n                  </Card.Header>\n                  <Card.Body>\n                    {loading ? (\n                      <p className=\"text-center\">Loading EMI data...</p>\n                    ) : (\n                      <EmiList \n                        emis={emis} \n                        refreshEmis={() => setRefreshData(!refreshData)} \n                        isAdmin={true} \n                      />\n                    )}\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"users\">\n                <Card>\n                  <Card.Header>\n                    <h4>User Management</h4>\n                  </Card.Header>\n                  <Card.Body>\n                    {loading ? (\n                      <p className=\"text-center\">Loading...</p>\n                    ) : users.length === 0 ? (\n                      <p className=\"text-center\">No users found.</p>\n                    ) : (\n                      <div className=\"table-responsive\">\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Email</th>\n                              <th>Role</th>\n                              <th>Verification Status</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {users.map(user => (\n                              <tr key={user._id}>\n                                <td>{user.name}</td>\n                                <td>{user.email}</td>\n                                <td>{user.role}</td>\n                                <td>{user.verificationStatus}</td>\n                                <td>\n                                  {user.role !== 'admin' && (\n                                    <Button\n                                      variant=\"primary\"\n                                      size=\"sm\"\n                                      onClick={() => handleMakeAdmin(user._id)}\n                                    >\n                                      Make Admin\n                                    </Button>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </div>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Tab.Container>\n      </Row>\n\n      {/* Reject Loan Modal */}\n      <Modal show={showRejectForm} onHide={() => setShowRejectForm(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Reject Loan Application</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleRejectLoan}>\n            <Form.Group>\n              <Form.Label>Rejection Reason</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={rejectReason}\n                onChange={(e) => setRejectReason(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Button type=\"submit\" variant=\"danger\" className=\"mt-3\">\n              Confirm Rejection\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}