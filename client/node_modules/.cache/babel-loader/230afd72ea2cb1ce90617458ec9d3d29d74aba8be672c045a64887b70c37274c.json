{"ast":null,"code":"import axios from 'axios';\nimport { getAuthHeader } from './authService';\nconst API_URL = 'http://localhost:5000/api';\n\n// Get all users (admin only)\nexport const getAllUsers = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/users`, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n  }\n};\n\n// Get user profile\nexport const getUserProfile = async userId => {\n  try {\n    const response = await axios.get(`${API_URL}/users/${userId}`, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n  }\n};\n\n// Update user profile\nexport const updateUserProfile = async (userId, userData) => {\n  try {\n    const response = await axios.put(`${API_URL}/users/${userId}`, userData, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n  }\n};\n\n// Upload user document\nexport const uploadUserDocument = async (userId, documentType, file) => {\n  try {\n    const formData = new FormData();\n    formData.append('document', file);\n    formData.append('documentType', documentType);\n    const response = await axios.post(`${API_URL}/users/${userId}/documents`, formData, {\n      ...getAuthHeader(),\n      headers: {\n        ...getAuthHeader().headers,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n  }\n};\n\n// Make user an admin (admin only)\nexport const makeAdmin = async userId => {\n  try {\n    const response = await axios.put(`${API_URL}/users/${userId}/make-admin`, {}, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n  }\n};\n\n// Verify or reject a user (admin only)\nexport const verifyUser = async (userId, status, notes) => {\n  try {\n    const response = await axios.put(`/api/users/${userId}/verify`, {\n      status,\n      notes\n    }, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    console.error('Error verifying user:', error);\n    throw error;\n  }\n};\n\n// Upload documents\nexport const uploadDocuments = async formData => {\n  try {\n    const config = {\n      ...getAuthHeader(),\n      headers: {\n        ...getAuthHeader().headers,\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const response = await axios.post('/api/users/documents', formData, config);\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading documents:', error);\n    throw error;\n  }\n};\n\n// Submit KYC documents\nexport const submitKYC = async (aadharCard, panCard, incomeProof) => {\n  try {\n    const formData = new FormData();\n    if (aadharCard) formData.append('aadharCard', aadharCard);\n    if (panCard) formData.append('panCard', panCard);\n    if (incomeProof) formData.append('incomeProof', incomeProof);\n    const config = {\n      ...getAuthHeader(),\n      headers: {\n        ...getAuthHeader().headers,\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const response = await axios.post(`${API_URL}/users/kyc`, formData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error('Error submitting KYC documents:', error);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n  }\n};","map":{"version":3,"names":["axios","getAuthHeader","API_URL","getAllUsers","response","get","data","error","_error$response","message","getUserProfile","userId","_error$response2","updateUserProfile","userData","put","_error$response3","uploadUserDocument","documentType","file","formData","FormData","append","post","headers","_error$response4","makeAdmin","_error$response5","verifyUser","status","notes","console","uploadDocuments","config","submitKYC","aadharCard","panCard","incomeProof","_error$response6"],"sources":["C:/Users/cpl/Desktop/Cursor/loan-management-system/client/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthHeader } from './authService';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Get all users (admin only)\r\nexport const getAllUsers = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users`, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Get user profile\r\nexport const getUserProfile = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users/${userId}`, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Update user profile\r\nexport const updateUserProfile = async (userId, userData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/users/${userId}`, userData, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Upload user document\r\nexport const uploadUserDocument = async (userId, documentType, file) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('document', file);\r\n    formData.append('documentType', documentType);\r\n    \r\n    const response = await axios.post(`${API_URL}/users/${userId}/documents`, formData, {\r\n      ...getAuthHeader(),\r\n      headers: {\r\n        ...getAuthHeader().headers,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Make user an admin (admin only)\r\nexport const makeAdmin = async (userId) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/users/${userId}/make-admin`, {}, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Verify or reject a user (admin only)\r\nexport const verifyUser = async (userId, status, notes) => {\r\n  try {\r\n    const response = await axios.put(`/api/users/${userId}/verify`, { \r\n      status, \r\n      notes \r\n    }, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Upload documents\r\nexport const uploadDocuments = async (formData) => {\r\n  try {\r\n    const config = {\r\n      ...getAuthHeader(),\r\n      headers: {\r\n        ...getAuthHeader().headers,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    \r\n    const response = await axios.post('/api/users/documents', formData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error uploading documents:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Submit KYC documents\r\nexport const submitKYC = async (aadharCard, panCard, incomeProof) => {\r\n  try {\r\n    const formData = new FormData();\r\n    if (aadharCard) formData.append('aadharCard', aadharCard);\r\n    if (panCard) formData.append('panCard', panCard);\r\n    if (incomeProof) formData.append('incomeProof', incomeProof);\r\n    \r\n    const config = {\r\n      ...getAuthHeader(),\r\n      headers: {\r\n        ...getAuthHeader().headers,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    \r\n    const response = await axios.post(`${API_URL}/users/kyc`, formData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error submitting KYC documents:', error);\r\n    throw error.response?.data || error.message;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}