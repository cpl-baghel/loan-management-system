{"ast":null,"code":"import axios from 'axios';\nimport { getAuthHeader } from './authService';\n\n// Get all users (admin only)\nexport const getAllUsers = async () => {\n  try {\n    const response = await axios.get('/api/users', getAuthHeader());\n    return response.data;\n  } catch (error) {\n    console.error('Error getting users:', error);\n    throw error;\n  }\n};\n\n// Make a user admin (admin only)\nexport const makeAdmin = async userId => {\n  try {\n    const response = await axios.put(`/api/users/${userId}/make-admin`, {}, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    console.error('Error making user admin:', error);\n    throw error;\n  }\n};\n\n// Verify or reject a user (admin only)\nexport const verifyUser = async (userId, status, notes) => {\n  try {\n    const response = await axios.put(`/api/users/${userId}/verify`, {\n      status,\n      notes\n    }, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    console.error('Error verifying user:', error);\n    throw error;\n  }\n};\n\n// Update user profile\nexport const updateUserProfile = async userData => {\n  try {\n    const response = await axios.put('/api/users/profile', userData, getAuthHeader());\n    return response.data;\n  } catch (error) {\n    console.error('Error updating profile:', error);\n    throw error;\n  }\n};\n\n// Upload documents\nexport const uploadDocuments = async formData => {\n  try {\n    const config = {\n      ...getAuthHeader(),\n      headers: {\n        ...getAuthHeader().headers,\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const response = await axios.post('/api/users/documents', formData, config);\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading documents:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","getAuthHeader","getAllUsers","response","get","data","error","console","makeAdmin","userId","put","verifyUser","status","notes","updateUserProfile","userData","uploadDocuments","formData","config","headers","post"],"sources":["C:/Users/cpl/Desktop/Cursor/loan-management-system/client/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthHeader } from './authService';\r\n\r\n// Get all users (admin only)\r\nexport const getAllUsers = async () => {\r\n  try {\r\n    const response = await axios.get('/api/users', getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error getting users:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Make a user admin (admin only)\r\nexport const makeAdmin = async (userId) => {\r\n  try {\r\n    const response = await axios.put(`/api/users/${userId}/make-admin`, {}, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error making user admin:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Verify or reject a user (admin only)\r\nexport const verifyUser = async (userId, status, notes) => {\r\n  try {\r\n    const response = await axios.put(`/api/users/${userId}/verify`, { \r\n      status, \r\n      notes \r\n    }, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update user profile\r\nexport const updateUserProfile = async (userData) => {\r\n  try {\r\n    const response = await axios.put('/api/users/profile', userData, getAuthHeader());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Upload documents\r\nexport const uploadDocuments = async (formData) => {\r\n  try {\r\n    const config = {\r\n      ...getAuthHeader(),\r\n      headers: {\r\n        ...getAuthHeader().headers,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n    \r\n    const response = await axios.post('/api/users/documents', formData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error uploading documents:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,eAAe;;AAE7C;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,YAAY,EAAEH,aAAa,CAAC,CAAC,CAAC;IAC/D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,cAAcD,MAAM,aAAa,EAAE,CAAC,CAAC,EAAER,aAAa,CAAC,CAAC,CAAC;IACxF,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOF,MAAM,EAAEG,MAAM,EAAEC,KAAK,KAAK;EACzD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,cAAcD,MAAM,SAAS,EAAE;MAC9DG,MAAM;MACNC;IACF,CAAC,EAAEZ,aAAa,CAAC,CAAC,CAAC;IACnB,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,EAAEd,aAAa,CAAC,CAAC,CAAC;IACjF,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAMC,MAAM,GAAG;MACb,GAAGjB,aAAa,CAAC,CAAC;MAClBkB,OAAO,EAAE;QACP,GAAGlB,aAAa,CAAC,CAAC,CAACkB,OAAO;QAC1B,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACoB,IAAI,CAAC,sBAAsB,EAAEH,QAAQ,EAAEC,MAAM,CAAC;IAC3E,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}