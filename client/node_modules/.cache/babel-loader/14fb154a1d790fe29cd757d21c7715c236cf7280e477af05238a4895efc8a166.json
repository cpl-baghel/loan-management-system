{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cpl\\\\Desktop\\\\Cursor\\\\loan-management-system\\\\client\\\\src\\\\components\\\\dashboard\\\\DashboardCharts.js\";\nimport React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport './dashboard.css';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\nconst DashboardCharts = ({\n  loansData,\n  usersCount\n}) => {\n  // Calculate summary data\n  const calculateSummary = () => {\n    const pending = loansData.filter(loan => loan.status === 'pending');\n    const approved = loansData.filter(loan => loan.status === 'approved');\n    const rejected = loansData.filter(loan => loan.status === 'rejected');\n    const paid = loansData.filter(loan => loan.status === 'paid');\n    const pendingAmount = pending.reduce((sum, loan) => sum + loan.amount, 0);\n    const approvedAmount = approved.reduce((sum, loan) => sum + loan.amount, 0);\n    const rejectedAmount = rejected.reduce((sum, loan) => sum + loan.amount, 0);\n    const paidAmount = paid.reduce((sum, loan) => sum + loan.amount, 0);\n\n    // Calculate upcoming EMIs (total of all monthly payments for approved loans)\n    const upcomingEmi = approved.reduce((sum, loan) => {\n      const monthlyRate = loan.interestRate / 100 / 12;\n      const payment = loan.amount * monthlyRate / (1 - Math.pow(1 + monthlyRate, -loan.term));\n      return sum + payment;\n    }, 0);\n    return {\n      counts: {\n        pending: pending.length,\n        approved: approved.length,\n        rejected: rejected.length,\n        paid: paid.length,\n        total: loansData.length,\n        users: usersCount\n      },\n      amounts: {\n        pending: pendingAmount,\n        approved: approvedAmount,\n        rejected: rejectedAmount,\n        paid: paidAmount,\n        total: pendingAmount + approvedAmount + rejectedAmount + paidAmount,\n        upcomingEmi: upcomingEmi\n      }\n    };\n  };\n  const summary = calculateSummary();\n\n  // Format currency\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  // Loan Status Distribution Pie Chart\n  const loanStatusData = {\n    labels: ['Pending', 'Approved', 'Rejected', 'Paid'],\n    datasets: [{\n      data: [summary.counts.pending, summary.counts.approved, summary.counts.rejected, summary.counts.paid],\n      backgroundColor: ['#ffc107',\n      // warning - yellow for pending\n      '#28a745',\n      // success - green for approved\n      '#dc3545',\n      // danger - red for rejected\n      '#0d6efd' // primary - blue for paid\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  // Loan Amount Distribution Pie Chart\n  const loanAmountData = {\n    labels: ['Pending', 'Approved', 'Rejected', 'Paid'],\n    datasets: [{\n      data: [summary.amounts.pending, summary.amounts.approved, summary.amounts.rejected, summary.amounts.paid],\n      backgroundColor: ['#ffc107',\n      // warning - yellow for pending\n      '#28a745',\n      // success - green for approved\n      '#dc3545',\n      // danger - red for rejected\n      '#0d6efd' // primary - blue for paid\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  // Monthly loan data (simulated for the chart)\n  const generateMonthlyData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const currentMonth = new Date().getMonth();\n\n    // Last 6 months\n    const labels = [];\n    for (let i = 5; i >= 0; i--) {\n      const monthIndex = (currentMonth - i + 12) % 12;\n      labels.push(months[monthIndex]);\n    }\n\n    // Generate random data for demonstration\n    const approvedData = Array.from({\n      length: 6\n    }, () => Math.floor(Math.random() * 5));\n    const pendingData = Array.from({\n      length: 6\n    }, () => Math.floor(Math.random() * 3));\n    return {\n      labels,\n      approvedData,\n      pendingData\n    };\n  };\n  const monthlyData = generateMonthlyData();\n  const monthlyLoanData = {\n    labels: monthlyData.labels,\n    datasets: [{\n      label: 'Approved Loans',\n      data: monthlyData.approvedData,\n      backgroundColor: '#28a745'\n    }, {\n      label: 'Pending Loans',\n      data: monthlyData.pendingData,\n      backgroundColor: '#ffc107'\n    }]\n  };\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Monthly Loan Activity'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 dashboard-stat-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-muted\",\n              children: \"Total Loans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: summary.counts.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-success mb-0\",\n              children: formatCurrency(summary.amounts.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 dashboard-stat-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-muted\",\n              children: \"Disbursed Loans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: summary.counts.approved\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-success mb-0\",\n              children: formatCurrency(summary.amounts.approved)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 dashboard-stat-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-muted\",\n              children: \"Pending Applications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: summary.counts.pending\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-warning mb-0\",\n              children: formatCurrency(summary.amounts.pending)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 dashboard-stat-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-muted\",\n              children: \"Upcoming EMI (Monthly)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: formatCurrency(summary.amounts.upcomingEmi)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-primary mb-0\",\n              children: [\"Active Users: \", summary.counts.users]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Loan Status Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Pie, {\n              data: loanStatusData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Loan Amount Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Pie, {\n              data: loanAmountData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Monthly Loan Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              options: barOptions,\n              data: monthlyLoanData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = DashboardCharts;\nexport default DashboardCharts;\nvar _c;\n$RefreshReg$(_c, \"DashboardCharts\");","map":{"version":3,"names":["React","Card","Row","Col","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Pie","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","register","DashboardCharts","loansData","usersCount","calculateSummary","pending","filter","loan","status","approved","rejected","paid","pendingAmount","reduce","sum","amount","approvedAmount","rejectedAmount","paidAmount","upcomingEmi","monthlyRate","interestRate","payment","Math","pow","term","counts","length","total","users","amounts","summary","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","loanStatusData","labels","datasets","data","backgroundColor","borderWidth","loanAmountData","generateMonthlyData","months","currentMonth","Date","getMonth","i","monthIndex","push","approvedData","Array","from","floor","random","pendingData","monthlyData","monthlyLoanData","label","barOptions","responsive","plugins","legend","position","title","display","text","children","className","md","Body","fileName","_jsxFileName","lineNumber","columnNumber","Header","options","_c","$RefreshReg$"],"sources":["C:/Users/cpl/Desktop/Cursor/loan-management-system/client/src/components/dashboard/DashboardCharts.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { \r\n  Chart as ChartJS, \r\n  ArcElement, \r\n  Tooltip, \r\n  Legend, \r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title\r\n} from 'chart.js';\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\nimport './dashboard.css';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  ArcElement, \r\n  Tooltip, \r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title\r\n);\r\n\r\nconst DashboardCharts = ({ loansData, usersCount }) => {\r\n  // Calculate summary data\r\n  const calculateSummary = () => {\r\n    const pending = loansData.filter(loan => loan.status === 'pending');\r\n    const approved = loansData.filter(loan => loan.status === 'approved');\r\n    const rejected = loansData.filter(loan => loan.status === 'rejected');\r\n    const paid = loansData.filter(loan => loan.status === 'paid');\r\n\r\n    const pendingAmount = pending.reduce((sum, loan) => sum + loan.amount, 0);\r\n    const approvedAmount = approved.reduce((sum, loan) => sum + loan.amount, 0);\r\n    const rejectedAmount = rejected.reduce((sum, loan) => sum + loan.amount, 0);\r\n    const paidAmount = paid.reduce((sum, loan) => sum + loan.amount, 0);\r\n\r\n    // Calculate upcoming EMIs (total of all monthly payments for approved loans)\r\n    const upcomingEmi = approved.reduce((sum, loan) => {\r\n      const monthlyRate = loan.interestRate / 100 / 12;\r\n      const payment = (loan.amount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -loan.term));\r\n      return sum + payment;\r\n    }, 0);\r\n\r\n    return {\r\n      counts: {\r\n        pending: pending.length,\r\n        approved: approved.length,\r\n        rejected: rejected.length,\r\n        paid: paid.length,\r\n        total: loansData.length,\r\n        users: usersCount\r\n      },\r\n      amounts: {\r\n        pending: pendingAmount,\r\n        approved: approvedAmount,\r\n        rejected: rejectedAmount,\r\n        paid: paidAmount,\r\n        total: pendingAmount + approvedAmount + rejectedAmount + paidAmount,\r\n        upcomingEmi: upcomingEmi\r\n      }\r\n    };\r\n  };\r\n\r\n  const summary = calculateSummary();\r\n\r\n  // Format currency\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  // Loan Status Distribution Pie Chart\r\n  const loanStatusData = {\r\n    labels: ['Pending', 'Approved', 'Rejected', 'Paid'],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          summary.counts.pending,\r\n          summary.counts.approved,\r\n          summary.counts.rejected,\r\n          summary.counts.paid\r\n        ],\r\n        backgroundColor: [\r\n          '#ffc107', // warning - yellow for pending\r\n          '#28a745', // success - green for approved\r\n          '#dc3545', // danger - red for rejected\r\n          '#0d6efd', // primary - blue for paid\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Loan Amount Distribution Pie Chart\r\n  const loanAmountData = {\r\n    labels: ['Pending', 'Approved', 'Rejected', 'Paid'],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          summary.amounts.pending,\r\n          summary.amounts.approved,\r\n          summary.amounts.rejected,\r\n          summary.amounts.paid\r\n        ],\r\n        backgroundColor: [\r\n          '#ffc107', // warning - yellow for pending\r\n          '#28a745', // success - green for approved\r\n          '#dc3545', // danger - red for rejected\r\n          '#0d6efd', // primary - blue for paid\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Monthly loan data (simulated for the chart)\r\n  const generateMonthlyData = () => {\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const currentMonth = new Date().getMonth();\r\n    \r\n    // Last 6 months\r\n    const labels = [];\r\n    for (let i = 5; i >= 0; i--) {\r\n      const monthIndex = (currentMonth - i + 12) % 12;\r\n      labels.push(months[monthIndex]);\r\n    }\r\n\r\n    // Generate random data for demonstration\r\n    const approvedData = Array.from({length: 6}, () => Math.floor(Math.random() * 5));\r\n    const pendingData = Array.from({length: 6}, () => Math.floor(Math.random() * 3));\r\n    \r\n    return {\r\n      labels,\r\n      approvedData,\r\n      pendingData\r\n    };\r\n  };\r\n\r\n  const monthlyData = generateMonthlyData();\r\n\r\n  const monthlyLoanData = {\r\n    labels: monthlyData.labels,\r\n    datasets: [\r\n      {\r\n        label: 'Approved Loans',\r\n        data: monthlyData.approvedData,\r\n        backgroundColor: '#28a745',\r\n      },\r\n      {\r\n        label: 'Pending Loans',\r\n        data: monthlyData.pendingData,\r\n        backgroundColor: '#ffc107',\r\n      }\r\n    ],\r\n  };\r\n\r\n  const barOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Monthly Loan Activity',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mb-4\">\r\n        <Col md={3}>\r\n          <Card className=\"h-100 dashboard-stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <h6 className=\"text-muted\">Total Loans</h6>\r\n              <h3>{summary.counts.total}</h3>\r\n              <p className=\"text-success mb-0\">\r\n                {formatCurrency(summary.amounts.total)}\r\n              </p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"h-100 dashboard-stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <h6 className=\"text-muted\">Disbursed Loans</h6>\r\n              <h3>{summary.counts.approved}</h3>\r\n              <p className=\"text-success mb-0\">\r\n                {formatCurrency(summary.amounts.approved)}\r\n              </p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"h-100 dashboard-stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <h6 className=\"text-muted\">Pending Applications</h6>\r\n              <h3>{summary.counts.pending}</h3>\r\n              <p className=\"text-warning mb-0\">\r\n                {formatCurrency(summary.amounts.pending)}\r\n              </p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card className=\"h-100 dashboard-stat-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <h6 className=\"text-muted\">Upcoming EMI (Monthly)</h6>\r\n              <h3>{formatCurrency(summary.amounts.upcomingEmi)}</h3>\r\n              <p className=\"text-primary mb-0\">\r\n                Active Users: {summary.counts.users}\r\n              </p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col md={4}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Loan Status Distribution</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Pie data={loanStatusData} />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Loan Amount Distribution</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Pie data={loanAmountData} />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Monthly Loan Activity</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Bar options={barOptions} data={monthlyLoanData} />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardCharts; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,OAAO,EACPC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,QACA,UAAU;AACjB,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAO,iBAAiB;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAb,OAAO,CAACc,QAAQ,CACdb,UAAU,EACVC,OAAO,EACPC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KACF,CAAC;AAED,MAAMQ,eAAe,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EACrD;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,OAAO,GAAGH,SAAS,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,SAAS,CAAC;IACnE,MAAMC,QAAQ,GAAGP,SAAS,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,UAAU,CAAC;IACrE,MAAME,QAAQ,GAAGR,SAAS,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,UAAU,CAAC;IACrE,MAAMG,IAAI,GAAGT,SAAS,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,MAAM,CAAC;IAE7D,MAAMI,aAAa,GAAGP,OAAO,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAKO,GAAG,GAAGP,IAAI,CAACQ,MAAM,EAAE,CAAC,CAAC;IACzE,MAAMC,cAAc,GAAGP,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAKO,GAAG,GAAGP,IAAI,CAACQ,MAAM,EAAE,CAAC,CAAC;IAC3E,MAAME,cAAc,GAAGP,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAKO,GAAG,GAAGP,IAAI,CAACQ,MAAM,EAAE,CAAC,CAAC;IAC3E,MAAMG,UAAU,GAAGP,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAKO,GAAG,GAAGP,IAAI,CAACQ,MAAM,EAAE,CAAC,CAAC;;IAEnE;IACA,MAAMI,WAAW,GAAGV,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAK;MACjD,MAAMa,WAAW,GAAGb,IAAI,CAACc,YAAY,GAAG,GAAG,GAAG,EAAE;MAChD,MAAMC,OAAO,GAAIf,IAAI,CAACQ,MAAM,GAAGK,WAAW,IAAK,CAAC,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,WAAW,EAAE,CAACb,IAAI,CAACkB,IAAI,CAAC,CAAC;MACzF,OAAOX,GAAG,GAAGQ,OAAO;IACtB,CAAC,EAAE,CAAC,CAAC;IAEL,OAAO;MACLI,MAAM,EAAE;QACNrB,OAAO,EAAEA,OAAO,CAACsB,MAAM;QACvBlB,QAAQ,EAAEA,QAAQ,CAACkB,MAAM;QACzBjB,QAAQ,EAAEA,QAAQ,CAACiB,MAAM;QACzBhB,IAAI,EAAEA,IAAI,CAACgB,MAAM;QACjBC,KAAK,EAAE1B,SAAS,CAACyB,MAAM;QACvBE,KAAK,EAAE1B;MACT,CAAC;MACD2B,OAAO,EAAE;QACPzB,OAAO,EAAEO,aAAa;QACtBH,QAAQ,EAAEO,cAAc;QACxBN,QAAQ,EAAEO,cAAc;QACxBN,IAAI,EAAEO,UAAU;QAChBU,KAAK,EAAEhB,aAAa,GAAGI,cAAc,GAAGC,cAAc,GAAGC,UAAU;QACnEC,WAAW,EAAEA;MACf;IACF,CAAC;EACH,CAAC;EAED,MAAMY,OAAO,GAAG3B,gBAAgB,CAAC,CAAC;;EAElC;EACA,MAAM4B,cAAc,GAAIjB,MAAM,IAAK;IACjC,OAAO,IAAIkB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE,KAAK;MACfC,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAACC,MAAM,CAACxB,MAAM,CAAC;EACnB,CAAC;;EAED;EACA,MAAMyB,cAAc,GAAG;IACrBC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC;IACnDC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,CACJZ,OAAO,CAACL,MAAM,CAACrB,OAAO,EACtB0B,OAAO,CAACL,MAAM,CAACjB,QAAQ,EACvBsB,OAAO,CAACL,MAAM,CAAChB,QAAQ,EACvBqB,OAAO,CAACL,MAAM,CAACf,IAAI,CACpB;MACDiC,eAAe,EAAE,CACf,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS,CAAE;MAAA,CACZ;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG;IACrBL,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC;IACnDC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,CACJZ,OAAO,CAACD,OAAO,CAACzB,OAAO,EACvB0B,OAAO,CAACD,OAAO,CAACrB,QAAQ,EACxBsB,OAAO,CAACD,OAAO,CAACpB,QAAQ,EACxBqB,OAAO,CAACD,OAAO,CAACnB,IAAI,CACrB;MACDiC,eAAe,EAAE,CACf,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS,CAAE;MAAA,CACZ;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACnG,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;IAE1C;IACA,MAAMV,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,UAAU,GAAG,CAACJ,YAAY,GAAGG,CAAC,GAAG,EAAE,IAAI,EAAE;MAC/CX,MAAM,CAACa,IAAI,CAACN,MAAM,CAACK,UAAU,CAAC,CAAC;IACjC;;IAEA;IACA,MAAME,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAC9B,MAAM,EAAE;IAAC,CAAC,EAAE,MAAMJ,IAAI,CAACmC,KAAK,CAACnC,IAAI,CAACoC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjF,MAAMC,WAAW,GAAGJ,KAAK,CAACC,IAAI,CAAC;MAAC9B,MAAM,EAAE;IAAC,CAAC,EAAE,MAAMJ,IAAI,CAACmC,KAAK,CAACnC,IAAI,CAACoC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEhF,OAAO;MACLlB,MAAM;MACNc,YAAY;MACZK;IACF,CAAC;EACH,CAAC;EAED,MAAMC,WAAW,GAAGd,mBAAmB,CAAC,CAAC;EAEzC,MAAMe,eAAe,GAAG;IACtBrB,MAAM,EAAEoB,WAAW,CAACpB,MAAM;IAC1BC,QAAQ,EAAE,CACR;MACEqB,KAAK,EAAE,gBAAgB;MACvBpB,IAAI,EAAEkB,WAAW,CAACN,YAAY;MAC9BX,eAAe,EAAE;IACnB,CAAC,EACD;MACEmB,KAAK,EAAE,eAAe;MACtBpB,IAAI,EAAEkB,WAAW,CAACD,WAAW;MAC7BhB,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,MAAMoB,UAAU,GAAG;IACjBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACE1E,OAAA,CAAAE,SAAA;IAAAyE,QAAA,gBACE3E,OAAA,CAACd,GAAG;MAAC0F,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB3E,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAC2F,SAAS,EAAC,2BAA2B;UAAAD,QAAA,eACzC3E,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAACF,SAAS,EAAC,aAAa;YAAAD,QAAA,gBAChC3E,OAAA;cAAI4E,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3ClF,OAAA;cAAA2E,QAAA,EAAKzC,OAAO,CAACL,MAAM,CAACE;YAAK;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/BlF,OAAA;cAAG4E,SAAS,EAAC,mBAAmB;cAAAD,QAAA,EAC7BxC,cAAc,CAACD,OAAO,CAACD,OAAO,CAACF,KAAK;YAAC;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNlF,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAC2F,SAAS,EAAC,2BAA2B;UAAAD,QAAA,eACzC3E,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAACF,SAAS,EAAC,aAAa;YAAAD,QAAA,gBAChC3E,OAAA;cAAI4E,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAe;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/ClF,OAAA;cAAA2E,QAAA,EAAKzC,OAAO,CAACL,MAAM,CAACjB;YAAQ;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClClF,OAAA;cAAG4E,SAAS,EAAC,mBAAmB;cAAAD,QAAA,EAC7BxC,cAAc,CAACD,OAAO,CAACD,OAAO,CAACrB,QAAQ;YAAC;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNlF,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAC2F,SAAS,EAAC,2BAA2B;UAAAD,QAAA,eACzC3E,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAACF,SAAS,EAAC,aAAa;YAAAD,QAAA,gBAChC3E,OAAA;cAAI4E,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAoB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpDlF,OAAA;cAAA2E,QAAA,EAAKzC,OAAO,CAACL,MAAM,CAACrB;YAAO;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjClF,OAAA;cAAG4E,SAAS,EAAC,mBAAmB;cAAAD,QAAA,EAC7BxC,cAAc,CAACD,OAAO,CAACD,OAAO,CAACzB,OAAO;YAAC;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNlF,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAC2F,SAAS,EAAC,2BAA2B;UAAAD,QAAA,eACzC3E,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAACF,SAAS,EAAC,aAAa;YAAAD,QAAA,gBAChC3E,OAAA;cAAI4E,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAsB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtDlF,OAAA;cAAA2E,QAAA,EAAKxC,cAAc,CAACD,OAAO,CAACD,OAAO,CAACX,WAAW;YAAC;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtDlF,OAAA;cAAG4E,SAAS,EAAC,mBAAmB;cAAAD,QAAA,GAAC,gBACjB,EAACzC,OAAO,CAACL,MAAM,CAACG,KAAK;YAAA;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlF,OAAA,CAACd,GAAG;MAAAyF,QAAA,gBACF3E,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAA0F,QAAA,gBACH3E,OAAA,CAACf,IAAI,CAACkG,MAAM;YAAAR,QAAA,eACV3E,OAAA;cAAI4E,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAwB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACdlF,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAAAH,QAAA,eACR3E,OAAA,CAACH,GAAG;cAACiD,IAAI,EAAEH;YAAe;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNlF,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAA0F,QAAA,gBACH3E,OAAA,CAACf,IAAI,CAACkG,MAAM;YAAAR,QAAA,eACV3E,OAAA;cAAI4E,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAwB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACdlF,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAAAH,QAAA,eACR3E,OAAA,CAACH,GAAG;cAACiD,IAAI,EAAEG;YAAe;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNlF,OAAA,CAACb,GAAG;QAAC0F,EAAE,EAAE,CAAE;QAAAF,QAAA,eACT3E,OAAA,CAACf,IAAI;UAAA0F,QAAA,gBACH3E,OAAA,CAACf,IAAI,CAACkG,MAAM;YAAAR,QAAA,eACV3E,OAAA;cAAI4E,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAqB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACdlF,OAAA,CAACf,IAAI,CAAC6F,IAAI;YAAAH,QAAA,eACR3E,OAAA,CAACF,GAAG;cAACsF,OAAO,EAAEjB,UAAW;cAACrB,IAAI,EAAEmB;YAAgB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACG,EAAA,GAzOIjF,eAAe;AA2OrB,eAAeA,eAAe;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}