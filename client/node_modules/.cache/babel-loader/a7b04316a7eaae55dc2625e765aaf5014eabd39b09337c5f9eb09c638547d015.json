{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cpl\\\\Desktop\\\\Cursor\\\\loan-management-system\\\\client\\\\src\\\\components\\\\emi\\\\EmiList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, Badge, Button, Modal, Form, Alert, Row, Col } from 'react-bootstrap';\nimport { payEmi, manualUpdateEmi } from '../../services/emiService';\n\n// Helper function to format currency in Rupees\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatCurrency = amount => {\n  if (!amount) return 'â‚¹0';\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR'\n  }).format(amount);\n};\n\n// Helper function to format date\nconst formatDate = dateString => {\n  if (!dateString) return 'N/A';\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// EMI status badge component\nconst EmiStatusBadge = ({\n  status\n}) => {\n  let variant;\n  switch (status) {\n    case 'paid':\n      variant = 'success';\n      break;\n    case 'overdue':\n      variant = 'danger';\n      break;\n    case 'pending':\n      variant = 'warning';\n      break;\n    default:\n      variant = 'secondary';\n  }\n  return /*#__PURE__*/_jsxDEV(Badge, {\n    bg: variant,\n    children: status.toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_c = EmiStatusBadge;\nconst EmiList = ({\n  emis,\n  refreshEmis,\n  isAdmin = false\n}) => {\n  _s();\n  var _selectedEmi$user;\n  const [selectedEmi, setSelectedEmi] = useState(null);\n  const [showPayModal, setShowPayModal] = useState(false);\n  const [showManualModal, setShowManualModal] = useState(false);\n  const [paymentId, setPaymentId] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [manualPaymentData, setManualPaymentData] = useState({\n    status: 'paid',\n    paymentDate: new Date().toISOString().split('T')[0],\n    paymentReference: '',\n    lateFee: 0\n  });\n  const handlePayClick = emi => {\n    setSelectedEmi(emi);\n    setPaymentId('');\n    setError('');\n    setSuccess('');\n    setShowPayModal(true);\n  };\n  const handleManualPayClick = emi => {\n    setSelectedEmi(emi);\n    setError('');\n    setSuccess('');\n\n    // Calculate default lateFee if overdue\n    let defaultLateFee = 0;\n    const today = new Date();\n    const dueDate = new Date(emi.dueDate);\n    if (today > dueDate) {\n      const daysLate = Math.floor((today - dueDate) / (1000 * 60 * 60 * 24));\n      // 1% of EMI amount per day, capped at 20%\n      const feePercentage = Math.min(daysLate * 1, 20);\n      defaultLateFee = emi.amount * feePercentage / 100;\n    }\n    setManualPaymentData({\n      status: 'paid',\n      paymentDate: new Date().toISOString().split('T')[0],\n      paymentReference: `CASH-${Date.now()}`,\n      lateFee: defaultLateFee\n    });\n    setShowManualModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowPayModal(false);\n    setShowManualModal(false);\n    setSelectedEmi(null);\n  };\n  const handlePaymentSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setIsProcessing(true);\n    try {\n      await payEmi(selectedEmi._id, paymentId);\n      setSuccess('Payment successful!');\n\n      // Close modal after 2 seconds and refresh data\n      setTimeout(() => {\n        handleCloseModal();\n        if (refreshEmis) refreshEmis();\n      }, 2000);\n    } catch (err) {\n      setError(err.message || 'Payment failed. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleManualPaymentSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setIsProcessing(true);\n    try {\n      await manualUpdateEmi(selectedEmi._id, manualPaymentData);\n      setSuccess('Payment record updated successfully!');\n\n      // Close modal after 2 seconds and refresh data\n      setTimeout(() => {\n        handleCloseModal();\n        if (refreshEmis) refreshEmis();\n      }, 2000);\n    } catch (err) {\n      setError(err.message || 'Update failed. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleManualInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setManualPaymentData({\n      ...manualPaymentData,\n      [name]: name === 'lateFee' ? parseFloat(value) : value\n    });\n  };\n\n  // Check if there's a late fee\n  const calculateTotal = emi => {\n    if (!emi) return 0;\n    return (emi.amount || 0) + (emi.lateFee || 0);\n  };\n\n  // Check if EMI is due soon (within 7 days)\n  const isDueSoon = dueDate => {\n    if (!dueDate) return false;\n    const today = new Date();\n    const due = new Date(dueDate);\n    const diffTime = due - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays > 0 && diffDays <= 7;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [emis.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center my-4\",\n      children: \"No EMIs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Late Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: emis.map(emi => {\n            var _emi$user;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: isDueSoon(emi.dueDate) && emi.status === 'pending' ? 'table-warning' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(emi.dueDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(emi.amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_emi$user = emi.user) === null || _emi$user === void 0 ? void 0 : _emi$user.name) || 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(EmiStatusBadge, {\n                  status: emi.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(emi.lateFee || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(emi.totalPaid || calculateTotal(emi))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [emi.status !== 'paid' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex gap-2\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    onClick: () => handleManualPayClick(emi),\n                    children: \"Record Payment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this), emi.status === 'paid' && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"success\",\n                  children: [\"Paid on \", formatDate(emi.paidDate)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, emi._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPayModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Make Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Due Date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatDate(selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.dueDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatCurrency(selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), (selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.status) === 'overdue' && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"warning\",\n          children: \"This payment is overdue. A late fee may be applied.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handlePaymentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Payment Reference ID (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: paymentId,\n              onChange: e => setPaymentId(e.target.value),\n              placeholder: \"Enter payment reference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"If you have a payment confirmation number, enter it here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleCloseModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing...' : 'Confirm Payment'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showManualModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Record Cash Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Recording payment for:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 52\n          }, this), \"Customer: \", (selectedEmi === null || selectedEmi === void 0 ? void 0 : (_selectedEmi$user = selectedEmi.user) === null || _selectedEmi$user === void 0 ? void 0 : _selectedEmi$user.name) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 61\n          }, this), \"Due Date: \", formatDate(selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.dueDate), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 57\n          }, this), \"Amount: \", formatCurrency(selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.amount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleManualPaymentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Payment Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"status\",\n              value: manualPaymentData.status,\n              onChange: handleManualInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"paid\",\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"overdue\",\n                children: \"Overdue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), manualPaymentData.status === 'paid' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Payment Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                name: \"paymentDate\",\n                value: manualPaymentData.paymentDate,\n                onChange: handleManualInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Payment Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"paymentReference\",\n                value: manualPaymentData.paymentReference,\n                onChange: handleManualInputChange,\n                placeholder: \"Cash receipt reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Late Fee (\\u20B9)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"lateFee\",\n                value: manualPaymentData.lateFee,\n                onChange: handleManualInputChange,\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Defaults to calculated late fee based on days overdue.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"fw-bold\",\n                  children: \"Payment Summary:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"EMI Amount: \", formatCurrency((selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.amount) || 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Late Fee: \", formatCurrency(manualPaymentData.lateFee)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0 fs-5\",\n                  children: [\"Total: \", formatCurrency(((selectedEmi === null || selectedEmi === void 0 ? void 0 : selectedEmi.amount) || 0) + manualPaymentData.lateFee)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleCloseModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing...' : 'Save Payment Record'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(EmiList, \"BVK9XKR3xR6V13HlLvyZDusM1Lg=\");\n_c2 = EmiList;\nexport default EmiList;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmiStatusBadge\");\n$RefreshReg$(_c2, \"EmiList\");","map":{"version":3,"names":["React","useState","Table","Badge","Button","Modal","Form","Alert","Row","Col","payEmi","manualUpdateEmi","jsxDEV","_jsxDEV","Fragment","_Fragment","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","EmiStatusBadge","status","variant","bg","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","_c","EmiList","emis","refreshEmis","isAdmin","_s","_selectedEmi$user","selectedEmi","setSelectedEmi","showPayModal","setShowPayModal","showManualModal","setShowManualModal","paymentId","setPaymentId","error","setError","success","setSuccess","isProcessing","setIsProcessing","manualPaymentData","setManualPaymentData","paymentDate","toISOString","split","paymentReference","lateFee","handlePayClick","emi","handleManualPayClick","defaultLateFee","today","dueDate","daysLate","Math","floor","feePercentage","min","now","handleCloseModal","handlePaymentSubmit","e","preventDefault","_id","setTimeout","err","message","handleManualPaymentSubmit","handleManualInputChange","name","value","target","parseFloat","calculateTotal","isDueSoon","due","diffTime","diffDays","ceil","length","className","striped","hover","map","_emi$user","user","totalPaid","size","onClick","paidDate","show","onHide","Header","closeButton","Title","Body","onSubmit","Group","Label","Control","type","onChange","placeholder","Text","disabled","as","required","_c2","$RefreshReg$"],"sources":["C:/Users/cpl/Desktop/Cursor/loan-management-system/client/src/components/emi/EmiList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Badge, Button, Modal, Form, Alert, Row, Col } from 'react-bootstrap';\r\nimport { payEmi, manualUpdateEmi } from '../../services/emiService';\r\n\r\n// Helper function to format currency in Rupees\r\nconst formatCurrency = (amount) => {\r\n  if (!amount) return 'â‚¹0';\r\n  return new Intl.NumberFormat('en-IN', {\r\n    style: 'currency',\r\n    currency: 'INR'\r\n  }).format(amount);\r\n};\r\n\r\n// Helper function to format date\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'N/A';\r\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\n// EMI status badge component\r\nconst EmiStatusBadge = ({ status }) => {\r\n  let variant;\r\n  switch (status) {\r\n    case 'paid':\r\n      variant = 'success';\r\n      break;\r\n    case 'overdue':\r\n      variant = 'danger';\r\n      break;\r\n    case 'pending':\r\n      variant = 'warning';\r\n      break;\r\n    default:\r\n      variant = 'secondary';\r\n  }\r\n  \r\n  return <Badge bg={variant}>{status.toUpperCase()}</Badge>;\r\n};\r\n\r\nconst EmiList = ({ emis, refreshEmis, isAdmin = false }) => {\r\n  const [selectedEmi, setSelectedEmi] = useState(null);\r\n  const [showPayModal, setShowPayModal] = useState(false);\r\n  const [showManualModal, setShowManualModal] = useState(false);\r\n  const [paymentId, setPaymentId] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [manualPaymentData, setManualPaymentData] = useState({\r\n    status: 'paid',\r\n    paymentDate: new Date().toISOString().split('T')[0],\r\n    paymentReference: '',\r\n    lateFee: 0\r\n  });\r\n\r\n  const handlePayClick = (emi) => {\r\n    setSelectedEmi(emi);\r\n    setPaymentId('');\r\n    setError('');\r\n    setSuccess('');\r\n    setShowPayModal(true);\r\n  };\r\n\r\n  const handleManualPayClick = (emi) => {\r\n    setSelectedEmi(emi);\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    // Calculate default lateFee if overdue\r\n    let defaultLateFee = 0;\r\n    const today = new Date();\r\n    const dueDate = new Date(emi.dueDate);\r\n    \r\n    if (today > dueDate) {\r\n      const daysLate = Math.floor((today - dueDate) / (1000 * 60 * 60 * 24));\r\n      // 1% of EMI amount per day, capped at 20%\r\n      const feePercentage = Math.min(daysLate * 1, 20);\r\n      defaultLateFee = (emi.amount * feePercentage) / 100;\r\n    }\r\n    \r\n    setManualPaymentData({\r\n      status: 'paid',\r\n      paymentDate: new Date().toISOString().split('T')[0],\r\n      paymentReference: `CASH-${Date.now()}`,\r\n      lateFee: defaultLateFee\r\n    });\r\n    \r\n    setShowManualModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowPayModal(false);\r\n    setShowManualModal(false);\r\n    setSelectedEmi(null);\r\n  };\r\n\r\n  const handlePaymentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      await payEmi(selectedEmi._id, paymentId);\r\n      setSuccess('Payment successful!');\r\n      \r\n      // Close modal after 2 seconds and refresh data\r\n      setTimeout(() => {\r\n        handleCloseModal();\r\n        if (refreshEmis) refreshEmis();\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err.message || 'Payment failed. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleManualPaymentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      await manualUpdateEmi(selectedEmi._id, manualPaymentData);\r\n      setSuccess('Payment record updated successfully!');\r\n      \r\n      // Close modal after 2 seconds and refresh data\r\n      setTimeout(() => {\r\n        handleCloseModal();\r\n        if (refreshEmis) refreshEmis();\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err.message || 'Update failed. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleManualInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setManualPaymentData({\r\n      ...manualPaymentData,\r\n      [name]: name === 'lateFee' ? parseFloat(value) : value\r\n    });\r\n  };\r\n\r\n  // Check if there's a late fee\r\n  const calculateTotal = (emi) => {\r\n    if (!emi) return 0;\r\n    return (emi.amount || 0) + (emi.lateFee || 0);\r\n  };\r\n\r\n  // Check if EMI is due soon (within 7 days)\r\n  const isDueSoon = (dueDate) => {\r\n    if (!dueDate) return false;\r\n    \r\n    const today = new Date();\r\n    const due = new Date(dueDate);\r\n    const diffTime = due - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays > 0 && diffDays <= 7;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {emis.length === 0 ? (\r\n        <p className=\"text-center my-4\">No EMIs found.</p>\r\n      ) : (\r\n        <div className=\"table-responsive\">\r\n          <Table striped hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Due Date</th>\r\n                <th>Amount</th>\r\n                {isAdmin && <th>Customer</th>}\r\n                <th>Status</th>\r\n                <th>Late Fee</th>\r\n                <th>Total</th>\r\n                {isAdmin && <th>Actions</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {emis.map((emi) => (\r\n                <tr key={emi._id} className={isDueSoon(emi.dueDate) && emi.status === 'pending' ? 'table-warning' : ''}>\r\n                  <td>{formatDate(emi.dueDate)}</td>\r\n                  <td>{formatCurrency(emi.amount)}</td>\r\n                  {isAdmin && (\r\n                    <td>{emi.user?.name || 'Unknown'}</td>\r\n                  )}\r\n                  <td><EmiStatusBadge status={emi.status} /></td>\r\n                  <td>{formatCurrency(emi.lateFee || 0)}</td>\r\n                  <td>{formatCurrency(emi.totalPaid || calculateTotal(emi))}</td>\r\n                  {isAdmin && (\r\n                    <td>\r\n                      {emi.status !== 'paid' && (\r\n                        <div className=\"d-flex gap-2\">\r\n                          <Button \r\n                            variant=\"success\" \r\n                            size=\"sm\"\r\n                            onClick={() => handleManualPayClick(emi)}\r\n                          >\r\n                            Record Payment\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                      {emi.status === 'paid' && (\r\n                        <Badge bg=\"success\">Paid on {formatDate(emi.paidDate)}</Badge>\r\n                      )}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Payment Modal */}\r\n      <Modal show={showPayModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Make Payment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {success && <Alert variant=\"success\">{success}</Alert>}\r\n          \r\n          <p>Due Date: <strong>{formatDate(selectedEmi?.dueDate)}</strong></p>\r\n          <p>Amount: <strong>{formatCurrency(selectedEmi?.amount)}</strong></p>\r\n          \r\n          {selectedEmi?.status === 'overdue' && (\r\n            <Alert variant=\"warning\">\r\n              This payment is overdue. A late fee may be applied.\r\n            </Alert>\r\n          )}\r\n          \r\n          <Form onSubmit={handlePaymentSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Payment Reference ID (Optional)</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={paymentId}\r\n                onChange={(e) => setPaymentId(e.target.value)}\r\n                placeholder=\"Enter payment reference\"\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                If you have a payment confirmation number, enter it here.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-end gap-2\">\r\n              <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\" disabled={isProcessing}>\r\n                {isProcessing ? 'Processing...' : 'Confirm Payment'}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Manual Payment Modal (Admin Only) */}\r\n      <Modal show={showManualModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Record Cash Payment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {success && <Alert variant=\"success\">{success}</Alert>}\r\n          \r\n          <Alert variant=\"info\">\r\n            <strong>Recording payment for:</strong><br />\r\n            Customer: {selectedEmi?.user?.name || 'Unknown'}<br />\r\n            Due Date: {formatDate(selectedEmi?.dueDate)}<br />\r\n            Amount: {formatCurrency(selectedEmi?.amount)}\r\n          </Alert>\r\n          \r\n          <Form onSubmit={handleManualPaymentSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Payment Status</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"status\"\r\n                value={manualPaymentData.status}\r\n                onChange={handleManualInputChange}\r\n                required\r\n              >\r\n                <option value=\"paid\">Paid</option>\r\n                <option value=\"pending\">Pending</option>\r\n                <option value=\"overdue\">Overdue</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            \r\n            {manualPaymentData.status === 'paid' && (\r\n              <>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Payment Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    name=\"paymentDate\"\r\n                    value={manualPaymentData.paymentDate}\r\n                    onChange={handleManualInputChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                \r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Payment Reference</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"paymentReference\"\r\n                    value={manualPaymentData.paymentReference}\r\n                    onChange={handleManualInputChange}\r\n                    placeholder=\"Cash receipt reference\"\r\n                  />\r\n                </Form.Group>\r\n                \r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Late Fee (â‚¹)</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"lateFee\"\r\n                    value={manualPaymentData.lateFee}\r\n                    onChange={handleManualInputChange}\r\n                    min=\"0\"\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Defaults to calculated late fee based on days overdue.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Row className=\"mb-3\">\r\n                  <Col>\r\n                    <p className=\"fw-bold\">Payment Summary:</p>\r\n                    <p>EMI Amount: {formatCurrency(selectedEmi?.amount || 0)}</p>\r\n                    <p>Late Fee: {formatCurrency(manualPaymentData.lateFee)}</p>\r\n                    <p className=\"mb-0 fs-5\">Total: {formatCurrency((selectedEmi?.amount || 0) + manualPaymentData.lateFee)}</p>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n            \r\n            <div className=\"d-flex justify-content-end gap-2\">\r\n              <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"success\" type=\"submit\" disabled={isProcessing}>\r\n                {isProcessing ? 'Processing...' : 'Save Payment Record'}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmiList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}